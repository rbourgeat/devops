---
- hosts: all
  become: true
  tasks:
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present

  - name: Install docker and its dependecies
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce 
      - docker-ce-cli 
      - containerd.io
    notify:
      - docker status

  - name: Add vagrant user to docker group
    user:
      name: vagrant
      group: docker

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet 
        - kubeadm 
        - kubectl

  - name: Configure node ip
    lineinfile:
      path: /etc/default/kubelet
      line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}
      create: yes

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted
  
  - name: Remove config.toml
    command: rm /etc/containerd/config.toml

  - name: Restart containerd
    service:
      name: containerd
      daemon_reload: yes
      state: restarted

  - name: Initialize the Kubernetes cluster using kubeadm
    command: kubeadm init --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address="192.168.50.10"

  - name: Setup kubeconfig for vagrant user
    command: "{{ item }}"
    with_items:
     - mkdir -p /home/vagrant/.kube
     - cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
     - chown vagrant:vagrant /home/vagrant/.kube/config

  - name: Deploying Flannel on Master Node
    become: false
    command: kubectl create -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

  - name: Generate join command
    command: kubeadm token create --print-join-command
    register: join_command

  - name: Copy join command to local file
    local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"

  - name: Copy wordpress folder
    become: true 
    copy:
      src: ./wordpress
      dest: /home/vagrant

  - name: Delete master taint
    command: kubectl taint node master node-role.kubernetes.io/control-plane:NoSchedule-
    become: yes
    become_user: vagrant

  - name: Start Wordpress
    command: kubectl apply -k /home/vagrant/wordpress
    become: yes
    become_user: vagrant

  # - name: Copy opensearch folder
  #   become: true 
  #   copy:
  #     src: ./opensearch
  #     dest: /home/vagrant
  
  # - name: Install helm
  #   command: sudo snap install helm --classic
  
  # - name: Adding opensearch helm repo
  #   command: helm repo add opensearch https://opensearch-project.github.io/helm-charts/
  #   become: yes
  #   become_user: vagrant
  
  # - name: Deploy opensearch/master
  #   command: helm install opensearch-master opensearch/opensearch -f /home/vagrant/opensearch/master.yaml
  #   become: yes
  #   become_user: vagrant
  
  # - name: Deploy opensearch/data
  #   command: helm install opensearch-data opensearch/opensearch -f /home/vagrant/opensearch/data.yaml
  #   become: yes
  #   become_user: vagrant
  
  # - name: Deploy opensearch/client
  #   command: helm install opensearch-client opensearch/opensearch -f /home/vagrant/opensearch/client.yaml
  #   become: yes
  #   become_user: vagrant

  # - name: Deploy opensearch Dashboard
  #   command: helm install dashboards opensearch/opensearch-dashboards
  #   become: yes
  #   become_user: vagrant

  handlers:
    - name: docker status
      service: name=docker state=started